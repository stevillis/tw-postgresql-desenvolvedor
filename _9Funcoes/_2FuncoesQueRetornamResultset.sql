CREATE OR REPLACE FUNCTION financeiro.FN_RELATORIO_GASTOS_CLIENTES(P_LIMITE_GASTOS_MINIMO MONEY DEFAULT NULL)
RETURNS TABLE 
(
	CLI_NOME VARCHAR(50),
	VALOR_TOTAL_GASTO MONEY,
	MENOR_VALOR_GASTO MONEY,
	MAIOR_VALOR_GASTO MONEY
)
AS
$$
BEGIN
	RETURN QUERY
	SELECT cli.CLI_NOME,
		COALESCE(SUM(financeiro.FN_CALCULAR_VALOR_VENDA(nfe.NFE_ID, nit.PRD_ID)), 0::MONEY) AS VALOR_TOTAL_GASTO,
		COALESCE(MIN(financeiro.FN_CALCULAR_VALOR_VENDA(nfe.NFE_ID, nit.PRD_ID)), 0::MONEY) AS MENOR_VALOR_GASTO,
		COALESCE(MAX(financeiro.FN_CALCULAR_VALOR_VENDA(nfe.NFE_ID, nit.PRD_ID)), 0::MONEY) AS MAIOR_VALOR_GASTO
	FROM geral.CLI_CLIENTES cli
	LEFT JOIN financeiro.NFE_NOTAS_FISCAIS nfe ON cli.CLI_ID = nfe.CLI_ID
	LEFT JOIN financeiro.NIT_ITENS_NOTA_FISCAL nit ON nfe.NFE_ID = nit.NFE_ID
	GROUP BY cli.CLI_NOME
	HAVING COALESCE(SUM(financeiro.FN_CALCULAR_VALOR_VENDA(nfe.NFE_ID, nit.PRD_ID)), 0::MONEY) >= COALESCE(P_LIMITE_GASTOS_MINIMO, 0::MONEY)
	ORDER BY cli.CLI_NOME;
END;
$$
LANGUAGE plpgsql
VOLATILE;

SELECT *
FROM financeiro.FN_RELATORIO_GASTOS_CLIENTES();

SELECT *
FROM financeiro.FN_RELATORIO_GASTOS_CLIENTES(45::MONEY);


------------------------------------------------------------

CREATE TYPE T_REL_GASTOS_CLIENTES AS
(
	CLI_NOME VARCHAR(50),
	VALOR_TOTAL_GASTO MONEY,
	MENOR_VALOR_GASTO MONEY,
	MAIOR_VALOR_GASTO MONEY
);


DROP FUNCTION financeiro.FN_RELATORIO_GASTOS_CLIENTES;

CREATE OR REPLACE FUNCTION financeiro.FN_RELATORIO_GASTOS_CLIENTES(P_LIMITE_GASTOS_MINIMO MONEY DEFAULT NULL)
RETURNS SETOF T_REL_GASTOS_CLIENTES 
AS
$$
DECLARE
	V_RELATORIO T_REL_GASTOS_CLIENTES%ROWTYPE;
BEGIN
	FOR V_RELATORIO IN
		SELECT cli.CLI_NOME,
			COALESCE(SUM(financeiro.FN_CALCULAR_VALOR_VENDA(nfe.NFE_ID, nit.PRD_ID)), 0::MONEY) AS VALOR_TOTAL_GASTO,
			COALESCE(MIN(financeiro.FN_CALCULAR_VALOR_VENDA(nfe.NFE_ID, nit.PRD_ID)), 0::MONEY) AS MENOR_VALOR_GASTO,
			COALESCE(MAX(financeiro.FN_CALCULAR_VALOR_VENDA(nfe.NFE_ID, nit.PRD_ID)), 0::MONEY) AS MAIOR_VALOR_GASTO
		FROM geral.CLI_CLIENTES cli
		LEFT JOIN financeiro.NFE_NOTAS_FISCAIS nfe ON cli.CLI_ID = nfe.CLI_ID
		LEFT JOIN financeiro.NIT_ITENS_NOTA_FISCAL nit ON nfe.NFE_ID = nit.NFE_ID
		GROUP BY cli.CLI_NOME
		HAVING COALESCE(SUM(financeiro.FN_CALCULAR_VALOR_VENDA(nfe.NFE_ID, nit.PRD_ID)), 0::MONEY) >= COALESCE(P_LIMITE_GASTOS_MINIMO, 0::MONEY)
		ORDER BY cli.CLI_NOME
	LOOP
		RETURN NEXT V_RELATORIO;
	END LOOP;
	RETURN;
END;
$$
LANGUAGE plpgsql
VOLATILE;

SELECT *
FROM financeiro.FN_RELATORIO_GASTOS_CLIENTES();

SELECT *
FROM financeiro.FN_RELATORIO_GASTOS_CLIENTES(45::MONEY);